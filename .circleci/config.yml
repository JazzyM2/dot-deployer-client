version: 2
jobs:
  build:
    docker:
      # use a wine image to successfully build a windows application
      # circle ci only supports mac and linux environments, so this is necessary
      - image: electronuserland/builder:wine-mono

    # set working directory
    working_directory: ~/repo
    
    # specify steps for build job
    steps:
      - checkout

      # download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          # install yarn packages
          name: "Install Packages"
          command: yarn install

      - save_cache:
          # cache node modules for faster builds
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      # run tests!

      - run:
          # build electron application
          # package.json forces this build to be a windows intaller
          name: "Build Application"
          command: yarn electron:build

      - store_artifacts:
          # store installer as an artifact to access via circle ci
          path: ./dist_electron/dot-deployer-setup.exe

      # get version from package.json
      - run:
          name: "Get Code Version"
          command: |
            node -p -e "require('./package.json').version" > ./dist_electron/version.txt

      - store_artifacts:
          # store version file
          path: ./dist_electron/version.txt
      
      - persist_to_workspace:
          # persist installer to workspace so release job can access
          root: ./dist_electron
          paths: 
            - dot-deployer-setup.exe
            - version.txt          
  release:
    docker:
      # use docker go image to leverage ghr library
      - image: circleci/golang:1.8

    steps:      
      # mount workspace from build job
      - attach_workspace:
          at: ./dist_electron

      - run:
          name: "Publish Installer on GitHub"
          environment:
            TITLE: "release title"
            BODY: "release body"
          command: |
            go get github.com/tcnksm/ghr
            echo 'export TAG=$(more ./dist_electron/version.txt)' >> $BASH_ENV
            source $BASH_ENV
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n ${TITLE} -b ${BODY} -soft ${TAG} ./dist_electron/dot-deployer-setup.exe
workflows:
  version: 2
  build-and-release:
    jobs:
      - build
      - release:
          # filters:
          #   branches:
          #     only:
          #       - master
          requires:
            - build
